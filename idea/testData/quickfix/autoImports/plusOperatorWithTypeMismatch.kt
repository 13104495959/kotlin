// "class org.jetbrains.kotlin.idea.quickfix.ImportFix" "false"
// WITH_RUNTIME
// FULL_JDK
// ERROR: Unresolved reference. None of the following candidates is applicable because of receiver type mismatch: <br>@InlineOnly public operator inline fun BigDecimal.plus(other: BigDecimal): BigDecimal defined in kotlin<br>@InlineOnly public operator inline fun BigInteger.plus(other: BigInteger): BigInteger defined in kotlin<br>public operator fun <T> Array<???>.plus(elements: Array<out ???>): Array<???> defined in kotlin.collections<br>public operator fun <T> Array<???>.plus(elements: Collection<???>): Array<???> defined in kotlin.collections<br>public operator fun <T> Array<Int>.plus(element: Int): Array<Int> defined in kotlin.collections<br>public operator fun BooleanArray.plus(element: Boolean): BooleanArray defined in kotlin.collections<br>public operator fun BooleanArray.plus(elements: BooleanArray): BooleanArray defined in kotlin.collections<br>public operator fun BooleanArray.plus(elements: Collection<Boolean>): BooleanArray defined in kotlin.collections<br>public operator fun ByteArray.plus(element: Byte): ByteArray defined in kotlin.collections<br>public operator fun ByteArray.plus(elements: ByteArray): ByteArray defined in kotlin.collections<br>public operator fun ByteArray.plus(elements: Collection<Byte>): ByteArray defined in kotlin.collections<br>@InlineOnly public operator inline fun Char.plus(other: String): String defined in kotlin.text<br>public operator fun CharArray.plus(element: Char): CharArray defined in kotlin.collections<br>public operator fun CharArray.plus(elements: CharArray): CharArray defined in kotlin.collections<br>public operator fun CharArray.plus(elements: Collection<Char>): CharArray defined in kotlin.collections<br>public operator fun DoubleArray.plus(element: Double): DoubleArray defined in kotlin.collections<br>public operator fun DoubleArray.plus(elements: DoubleArray): DoubleArray defined in kotlin.collections<br>public operator fun DoubleArray.plus(elements: Collection<Double>): DoubleArray defined in kotlin.collections<br>public operator fun FloatArray.plus(element: Float): FloatArray defined in kotlin.collections<br>public operator fun FloatArray.plus(elements: FloatArray): FloatArray defined in kotlin.collections<br>public operator fun FloatArray.plus(elements: Collection<Float>): FloatArray defined in kotlin.collections<br>public operator fun IntArray.plus(element: Int): IntArray defined in kotlin.collections<br>public operator fun IntArray.plus(elements: IntArray): IntArray defined in kotlin.collections<br>public operator fun IntArray.plus(elements: Collection<Int>): IntArray defined in kotlin.collections<br>public operator fun LongArray.plus(element: Long): LongArray defined in kotlin.collections<br>public operator fun LongArray.plus(elements: LongArray): LongArray defined in kotlin.collections<br>public operator fun LongArray.plus(elements: Collection<Long>): LongArray defined in kotlin.collections<br>public operator fun ShortArray.plus(element: Short): ShortArray defined in kotlin.collections<br>public operator fun ShortArray.plus(elements: ShortArray): ShortArray defined in kotlin.collections<br>public operator fun ShortArray.plus(elements: Collection<Short>): ShortArray defined in kotlin.collections<br>public operator fun String?.plus(other: Any?): String defined in kotlin<br>public operator fun <T> Collection<???>.plus(elements: Array<out ???>): List<???> defined in kotlin.collections<br>public operator fun <T> Collection<???>.plus(elements: Iterable<???>): List<???> defined in kotlin.collections<br>public operator fun <T> Collection<???>.plus(elements: Sequence<???>): List<???> defined in kotlin.collections<br>public operator fun <T> Collection<Int>.plus(element: Int): List<Int> defined in kotlin.collections<br>public operator fun <T> Iterable<???>.plus(elements: Array<out ???>): List<???> defined in kotlin.collections<br>public operator fun <T> Iterable<???>.plus(elements: Iterable<???>): List<???> defined in kotlin.collections<br>public operator fun <T> Iterable<???>.plus(elements: Sequence<???>): List<???> defined in kotlin.collections<br>public operator fun <T> Iterable<Int>.plus(element: Int): List<Int> defined in kotlin.collections<br>public operator fun <K, V> Map<out ???, ???>.plus(pairs: Array<out Pair<???, ???>>): Map<???, ???> defined in kotlin.collections<br>public operator fun <K, V> Map<out ???, ???>.plus(pair: Pair<???, ???>): Map<???, ???> defined in kotlin.collections<br>public operator fun <K, V> Map<out ???, ???>.plus(pairs: Iterable<Pair<???, ???>>): Map<???, ???> defined in kotlin.collections<br>public operator fun <K, V> Map<out ???, ???>.plus(map: Map<out ???, ???>): Map<???, ???> defined in kotlin.collections<br>public operator fun <K, V> Map<out ???, ???>.plus(pairs: Sequence<Pair<???, ???>>): Map<???, ???> defined in kotlin.collections<br>public operator fun <T> Set<???>.plus(elements: Array<out ???>): Set<???> defined in kotlin.collections<br>public operator fun <T> Set<???>.plus(elements: Iterable<???>): Set<???> defined in kotlin.collections<br>public operator fun <T> Set<???>.plus(elements: Sequence<???>): Set<???> defined in kotlin.collections<br>public operator fun <T> Set<Int>.plus(element: Int): Set<Int> defined in kotlin.collections<br>public operator fun <T> Sequence<???>.plus(elements: Array<out ???>): Sequence<???> defined in kotlin.sequences<br>public operator fun <T> Sequence<???>.plus(elements: Iterable<???>): Sequence<???> defined in kotlin.sequences<br>public operator fun <T> Sequence<???>.plus(elements: Sequence<???>): Sequence<???> defined in kotlin.sequences<br>public operator fun <T> Sequence<Int>.plus(element: Int): Sequence<Int> defined in kotlin.sequences


class JustClass
fun some() {
    val x = JustClass() +<caret> 1
}